generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id        String  @id @default(uuid()) @db.Uuid
  fullName  String  @map("full_name") @db.VarChar(100)
  email     String  @unique @db.VarChar
  age       Int?
  password  String  @db.Text
  authToken String? @map("auth_token") @db.Text

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  // pode ter endereco ou nao
  // 1--1
  address Address?

  // 1 para muitos
  assessment Assessment[]

  enrollment Enrollment[]

  @@map("student")
}

model Address {
  id           String  @id @default(uuid()) @db.Uuid
  neighborhood String  @db.VarChar(100)
  cep          String  @db.VarChar(8)
  city         String  @db.VarChar(100)
  number       String  @db.VarChar(20)
  uf           String  @db.Char(2)
  complement   String? @db.VarChar(100)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  // @unique garante que so vai haver um endereco para cada aluno
  // 1--1
  studentId String  @unique @map("student_id") @db.Uuid
  student   Student @relation(fields: [studentId], references: [id])

  @@map("address")
}

model Assessment {
  id     String  @id @default(uuid()) @db.Uuid
  module String  @db.VarChar(100)
  grade  Decimal @db.Decimal(4, 2)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  // varias acvaliacoes para um aluno
  studentId String  @map("student_id") @db.Uuid
  student   Student @relation(fields: [studentId], references: [id])

  @@map("assessment")
}

model Class {
  id          String  @id @default(uuid()) @db.Uuid
  subject     String  @db.VarChar(100)
  edition     Int     @db.SmallInt
  class       String? @db.VarChar(20)
  maxStudents Int     @map("max_students") @db.SmallInt

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  // 1 - n
  enrollment Enrollment[]

  @@map("class")
}

model Enrollment {
  controlNumber BigInt  @unique @map("control_number") @db.BigInt
  active        Boolean @default(true) @db.Boolean

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("update_at")

  // FK
  idStudent String  @map("id_student") @db.Uuid
  student   Student @relation(fields: [idStudent], references: [id])

  idClass String @map("id_class") @db.Uuid
  class   Class  @relation(fields: [idClass], references: [id])

  @@id([idStudent, idClass])
  @@map("enrollment")
}
